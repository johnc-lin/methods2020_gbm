install.packages("swirl")
library("swirl")
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z<-c(1.1,9,3.14)
?c z
/z
?z
?c
z
z <- c(z, 555, z)
c(z, 555, z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my
my_div
2
swirl()
swirl()
swirl::install_course("The R Programming Environment")
1
swirl()
getwd()
ls()
x <-9
1s()
ls()
dir
dir()
?list.files
args()
args(list.files)
old.dir <- list.files
old.dir <- getwd()
dir.create(testdir)
testdir<-dir.create()
info
dir.create("testdir")
setwd("testdir")
file.create(mytest.R)
file.create("mytest.R")
getwd()
list.files()
file.exists()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R",mytest3.R")
/
cancel
info
o
file.copy("mytest2.R")
file.copy("mytest2.R")
file.copy("mytest2.R","mytest3.R")
fil.path("mytest3.R")
file.path("mytest3.R")
file.path("folder1")
file.path("folder1", "folder2")
?dir.create
dir.create("testdir2")
dir.create(file.path("testdir2", "testdir3"))
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
setwd()
setwd(dir = old.dir)
1:20
pi:10
15:1
?:
:
?`:`
seq(1,20)
seq(0,10,by=0.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
info?
x
?info
info()
bye()
library(tidyverse)
#> ── Attaching packages ────────────────────────────────── tidyverse 1.2.1 ──
#> ✔ ggplot2 3.1.0.9000     ✔ purrr   0.2.5
#> ✔ tibble  2.0.0          ✔ dplyr   0.7.8
#> ✔ tidyr   0.8.2          ✔ stringr 1.3.1
#> ✔ readr   1.3.1          ✔ forcats 0.3.0
#> ── Conflicts ───────────────────────────────────── tidyverse_conflicts() ──
#> ✖ dplyr::filter() masks stats::filter()
#> ✖ dplyr::lag()    masks stats::lag()
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg)
ggplot(data = mpg)
ggplot(data = mpg)
ggplot(data = mpg)
ggplot(data = mpg) +
+     geom_point(mapping = aes(x = displ, y = hwy))
?facet_wrap
swirl()
?info
info()
bye()
swirl()
1length(my_seq)
bye()
swirl()
bye()
swirl()
bye()
swirl()
x <- c(44,NA,5,NA)
bye()
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants=$Active_Growth_Period)
table(plants$Active_Growth_Period)
str(plants)
TRUE == FALSE
TRUE == TRUE
(FALSE == TRUE) == FALUSE
(FALSE == TRUE) == FALSE
6 == 7
6 <= 7
6 < 7
10 <= 10
5 != 7
bye()
swirl()
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10, replace=FALSE)
sample(1:20, 10, replace = FALSE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
sample(c(0,1),100,replace=TRUE)
sample(c(0,1),100,replace=TRUE, prob=c(0.3,0.7))
sample(c(0,1),100,replace = TRUE, prob = c(0.3,0.7))
sample(c(0,1), 100, replace = TRUE, prob = c(0.3,0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3,0.7))
flips
sum(flips,1)
sum(flips)
?rbinom
rbinom(1,size=100,prob=0.7)
flips2 <- rbinom(100,size=1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(100,25)
rnorm(10, mean = 100, sd = 25)
rpois(5,10)
my_pois <- replicate (100, rpois(5,10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969.01.01")
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
as.POSIXlt(Sys.time())
as.POSIXlt(Sys.time()).
t2<-as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %HL%M")
t4 <-  strptime(t3, "%B %d, %Y %HL%M")
t4 <-  strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.time()-t1
difftime(Sys.time(),t1,units='days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed, y=cars$dist)
bye()
swirl()
bye()
rows <- read.csv("~/Downloads/rows.csv")
View(rows)
sum(rows)
sum(rows$YearStart)
sum(rows$YearStart)/2016
disp(rows)
show(rows)
medi <- read.csv("~/Downloads/AMD Medicare RI.csv")
View(medi)
view medi
medi <- read.csv("~/Downloads/AMD Medicare RI.csv")
rows <- read.csv("~/Downloads/AMD_Medicare_RI.csv")
view medi
View(medi)
View(rows)
medi <- read.csv("~/Downloads/AMD_Medicare_RI.csv")
View(medi)
medi <- medi[-c(1)]
subset(medi, LocationAbbr=="RI")
subset(medi, LocationAbbr=="RI")
medi <- subset(medi, LocationAbbr=="RI")
medi <- subset(medi, YearEnd==2014)
medi <- subset(medi, Category=="Age Related Macular Degeneration")
medi <- subset(medi, Gender==Male || Gender ==Female)
medi <- subset(medi, Gender=="Male" || Gender=="Female")
sum(medi$Gender)
plot(medi)
plot(x==medi$Response, y==medi$Age)
save(medi, list = character(),
file = stop("AMD_Medicare.csv"),
ascii = FALSE, version = NULL, envir = parent.frame(),
compress = isTRUE(!ascii), compression_level,
eval.promises = TRUE, precheck = TRUE)
save(medi, list = character(),
file = stop("AMD_Medicare.csv")
ascii = FALSE, version = NULL, envir = parent.frame(),
+      compress = isFALSE(!ascii)
+      eval.promises = TRUE, precheck = TRUE)
to_be_saved_obj = paste("medi", a, sep = "_")
save(list = to_be_saved_obj, file = 'AMD_Medicare.Rdata')
to_be_saved_obj <- paste("medi", a, sep = "_")
save(list = to_be_saved_obj, file = 'AMD_Medicare.Rdata')
save(list = medi, file = 'AMD_Medicare.Rdata')
Eye.Health.RI <- read.csv("~/Downloads/Eye Health RI.csv")
View(Eye.Health.RI)
EyeRI <- Eye.Health.RI
plot(EyeRI$YearStart, EyeRI$Category)
ggplot(data = EyeRI) +
geom_bar(mapping = aes(x = EyeRI$Category))
ggplot(data = EyeRI) +geom_bar(mapping = aes(x = EyeRI$Category))
+     geom_bar(mapping = aes(x = EyeRI$RaceEthnicity))
ggplot(data = EyeRI) +
+     geom_bar(mapping = aes(x = EyeRI$RaceEthnicity))
ggplot(data = EyeRI) +
geom_bar(mapping = aes(x = EyeRI$RaceEthnicity))
ggplot(data = EyeRI) +
geom_bar(mapping = aes(x = RaceEthnicity))
ggplot(data = EyeRI) +
geom_bar(mapping = aes(x = Gender))
ggplot(data = EyeRI) +
geom_bar(mapping = aes(x = Gender, y= Sample_Size))
ggplot(data = EyeRI) +
geom_point(mapping = aes(x = Gender, y= Sample_Size))
ggplot(data = EyeRI) +
geom_point(mapping = aes(x = Sample_Size, y= Data_Value))
choose(10,3)
choose(10,3)
choose(10,3)
sample(x = 1:5)
sample(x = 1:5, size=2)
sample(x = 1:5, size=92)
sample(x = 1:100, size=92)
sample(x = 2:100, size=92)
sample(1:10,1)
sample(x=1,2,3,4, size=3)
sample(x=1,2,3, size=3)
replicate(2, sample(x=1:6,size=2,replace=TRUE))
replicate(5, sample(x=1:6,size=2,replace=TRUE))
sum(Dice)
mean(replicate(10000, sample(x=1:6,size=2,replace=TRUE)))
mean(replicate(10000, {Dice <- sample(x=1:6,size=2,replace=TRUE); sum(Dice)==8}))
mean(replicate(10000, {Dice <- sample(x=1:6,size=2,replace=TRUE); sum(Dice)==8}))
mean(replicate(10000, {Dice <- sample(x=1:6,size=2,replace=TRUE); sum(Dice)==8}))
mean(replicate(10000, {Dice <- sample(x=1:6,size=2,replace=TRUE); sum(Dice)==8}))
mean(replicate(100000000, {Dice <- sample(x=1:6,size=2,replace=TRUE); sum(Dice)==8}))
q
sum(Dice) ==8
ice <- sample(x=1:6,size=2,replace=TRUE)
Dice <- sample(x=1:6,size=2,replace=TRUE)
sum(Dice)==8
sum(Dice)==8
Dice <- sample(x=1:6,size=2,replace=TRUE)
sum(Dice)==8
c("H", "T")
sample(c("H","T",25,replace=TRUE))
coinToss<-sample(c("H","T",25,replace=TRUE))
coinToss<-sample(c("H","T",10,replace=TRUE))
coinToss
coinToss<-sample(c("H","T"),10,replace=TRUE))
coinToss<-sample(c("H","T"),10,replace=TRUE)
coinToss
sum(coinToss=="t")
sum(coinToss=="T")
sum(coinToss=="H")
coinToss[1:9]
sum(coinToss == "H")==3
sample(x=1:365, size=70, replace=TRUE)
anyDuplicated(sample(x=1:365, size=70, replace=TRUE))
anyDuplicated(sample(x=1:365, size=25, replace=TRUE))
anyDuplicated(sample(x=1:365, size=25, replace=TRUE))
anyDuplicated(sample(x=1:365, size=25, replace=TRUE))
anyDuplicated(sample(x=1:365, size=25, replace=TRUE))
anyDuplicated(sample(x=1:365, size=25, replace=TRUE))
anyDuplicated(sample(x=1:365, size=25, replace=TRUE))
anyDuplicated(sample(x=1:365, size=25, replace=TRUE))
anyDuplicated(sample(x=1:365, size=25, replace=TRUE))
trials <- replicated(n=10000,expr=anyDuplicated(sample(x=1:365, size=25, replace=TRUE))
)
trials <- replicate(n=10000,expr=anyDuplicated(sample(x=1:365, size=25, replace=TRUE))
)
trials <- replicate(n=10000,expr=anyDuplicated(sample(x=1:365, size=25, replace=TRUE)))
head(trials)
means(trials==0)
mean(trials==0)
trials <- replicate(n=10000,expr=anyDuplicated(sample(x=1:365, size=13, replace=TRUE)))
mean(trials==0)
trials <- replicate(n=10000,expr=anyDuplicated(sample(x=1:365, size=13, replace=TRUE)))
mean(trials==0)
trials <- replicate(n=10000,expr=anyDuplicated(sample(x=1:365, size=13, replace=TRUE)))
mean(trials==0)
trials <- replicate(n=10000,expr=anyDuplicated(sample(x=1:365, size=25, replace=TRUE)))
mean(trials==0)
processed_data <- read.csv("~/github/gbm_ml/processed_data.csv")
View(processed_data)
library(ggplot2)
boxplot.R
q()
install.packages("tidyverse")
install.packages("ggplot2")
library(ggplot2)
# Basic box plot
setwd("/Users/johnlin/github/gbm_ml/")
gbm_data <- read.csv("forest_predictions.csv")
plot_1 <- ggplot(data = gbm_data, mapping = aes(x = V2, y = V1))
plot_1 + geom_boxplot()
library(ggplot2)
# Basic box plot
setwd("/Users/johnlin/github/gbm_ml/")
gbm_data <- read.csv("forest_predictions.csv")
plot_1 <- ggplot(data = gbm_data, mapping = aes(x = V2, y = V1))
plot_1 + geom_point()
library(ggplot2)
# Basic box plot
setwd("/Users/johnlin/github/gbm_ml/")
gbm_data <- read.csv("forest_predictions.csv")
plot_1 <- ggplot(data = gbm_data, mapping = aes(x = "", y = V1))
plot_1 + geom_boxplot()
gbm_final_data <- read.csv("~/github/gbm_ml/gbm_final_data.csv")
View(gbm_final_data)
forest_predictions <- read.csv("~/github/gbm_ml/forest_predictions.csv", header=FALSE)
View(forest_predictions)
library(ggplot2)
# Basic box plot
setwd("/Users/johnlin/github/gbm_ml/")
gbm_data <- read.csv("forest_predictions.csv")
plot_1 <- ggplot(data = gbm_data, mapping = aes(x = V2, y = V1))
plot_1 + geom_boxplot()
library(ggplot2)
# Basic box plot
setwd("/Users/johnlin/github/gbm_ml/")
gbm_data <- read.csv2("forest_predictions.csv")
plot_1 <- ggplot(data = gbm_data, mapping = aes(x = V2, y = V1))
plot_1 + geom_boxplot()
library(ggplot2)
# Basic box plot
setwd("/Users/johnlin/github/gbm_ml/")
gbm_data <- read.csv("forest_predictions.csv", sep = ",", fileEncoding="utf-16")
plot_1 <- ggplot(data = gbm_data, mapping = aes(x = V2, y = V1))
plot_1 + geom_boxplot()
library(ggplot2)
# Basic box plot
setwd("/Users/johnlin/github/gbm_ml/")
gbm_data <- read.csv("forest_mse.csv")
plot_1 <- ggplot(data = gbm_data, mapping = aes(x = "", y = V1))
plot_1 + geom_boxplot()
forest_mse <- read.table("~/github/gbm_ml/forest_mse.csv", quote="\"", comment.char="")
View(forest_mse)
